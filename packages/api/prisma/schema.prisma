generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

enum Role {
  ADMIN
  USER

  @@map("Roles")
}

model User {
  id       Int      @id @unique @default(autoincrement())
  created  DateTime @default(now())
  modified DateTime @default(now())
  deleted  Boolean  @default(false)

  username String @unique
  password String
  role     Role

  @@map("Users")
}

model Product {
  id       Int      @id @unique @default(autoincrement())
  created  DateTime @default(now())
  modified DateTime @default(now())
  deleted  Boolean  @default(false)

  name String

  suppliers        Supplier[]
  activityTemplate ActivityTemplate[]

  @@map("Products")
}

model Client {
  id       Int      @id @unique @default(autoincrement())
  created  DateTime @default(now())
  modified DateTime @default(now())
  deleted  Boolean  @default(false)

  name        String
  address     String
  cif         String
  rc          String
  bankName    String
  bankIban    String
  phoneNumber String
  email       String

  contracts Contract[]

  @@map("Clients")
}

model Supplier {
  id       Int      @id @unique @default(autoincrement())
  created  DateTime @default(now())
  modified DateTime @default(now())
  deleted  Boolean  @default(false)

  name        String
  address     String
  cif         String
  rc          String
  bankName    String
  bankIban    String
  phoneNumber String
  email       String

  contracts        Contract[]
  products         Product[]
  costs            Cost[]
  activityTemplate ActivityTemplate[]

  @@map("Suppliers")
}

model Contract {
  id       Int      @id @unique @default(autoincrement())
  created  DateTime @default(now())
  modified DateTime @default(now())
  deleted  Boolean  @default(false)

  number         String
  cost           Float
  start          DateTime
  end            DateTime
  location       String
  details        String
  representative String
  active         Boolean  @default(true)

  clientId Int    @unique
  client   Client @relation(fields: [clientId], references: [id])

  suppliers Supplier[]
  projects  Project[]
  receipt   Receipt[]

  @@map("Contracts")
}

model ActivityTemplate {
  id       Int      @id @unique @default(autoincrement())
  created  DateTime @default(now())
  modified DateTime @default(now())
  deleted  Boolean  @default(false)

  description String
  cost        Float
  available   Boolean @default(true)

  supplierId Int
  supplier   Supplier @relation(fields: [supplierId], references: [id])
  productId  Int
  product    Product  @relation(fields: [productId], references: [id])

  projectActivities ProjectActivity[]

  @@index([supplierId])
  @@index([productId])
  @@map("ActivityTemplates")
}

model Employee {
  id       Int      @id @unique @default(autoincrement())
  created  DateTime @default(now())
  modified DateTime @default(now())
  deleted  Boolean  @default(false)

  name      String
  position  String
  available Boolean @default(true)

  adminProjects Project[] @relation("admin")
  localProjects Project[] @relation("local")

  @@map("Employees")
}

model Project {
  id       Int      @id @unique @default(autoincrement())
  created  DateTime @default(now())
  modified DateTime @default(now())
  deleted  Boolean  @default(false)

  code        String
  description String
  area        String
  start       DateTime
  end         DateTime
  available   Boolean  @default(true)

  areaAdminId  Int?
  areaAdmin    Employee? @relation("admin", fields: [areaAdminId], references: [id])
  localAdminId Int?
  localAdmin   Employee? @relation("local", fields: [localAdminId], references: [id])
  contractId   Int?
  contract     Contract? @relation(fields: [contractId], references: [id])

  projectActivities ProjectActivity[]
  reports           ProjectReport[]

  @@index([areaAdminId])
  @@index([localAdminId])
  @@index([contractId])
  @@map("Projects")
}

model ProjectReport {
  id       Int      @id @unique @default(autoincrement())
  created  DateTime @default(now())
  modified DateTime @default(now())
  deleted  Boolean  @default(false)
  date     DateTime

  projectId Int?
  project   Project? @relation(fields: [projectId], references: [id])

  dailyActivityReports   ActivityReport[] @relation("daily_report")
  monthlyActivityReports ActivityReport[] @relation("monthly_report")

  @@index([projectId])
  @@map("ProjectRepots")
}

model ProjectActivity {
  id       Int      @id @unique @default(autoincrement())
  created  DateTime @default(now())
  modified DateTime @default(now())
  deleted  Boolean  @default(false)

  quantity    Float  @default(0)
  // copied from activity template
  description String
  // copied from activity template
  cost        Float

  activityTemplateId Int
  activityTemplate   ActivityTemplate @relation(fields: [activityTemplateId], references: [id])
  projectId          Int
  project            Project          @relation(fields: [projectId], references: [id])

  dailyActivityReports   ActivityReport[] @relation("daily_activity_report")
  monthlyActivityReports ActivityReport[] @relation("monthly_activity_report")

  @@index([projectId])
  @@index([activityTemplateId])
  @@map("ProjectActivities")
}

model ActivityReport {
  id       Int      @id @unique @default(autoincrement())
  created  DateTime @default(now())
  modified DateTime @default(now())
  deleted  Boolean  @default(false)

  // daily

  todayStock        Int?
  addedStock        Int?
  totalStock        Int?
  noImplToday       Int?
  finalStockToday   Int?
  totalImplToday    Int?
  totalProjectUnits Int?
  remainingUnits    Int?

  // monthly

  monthlyNoImplUnits  Int? // suma noImplToday
  monthlyActivityCost Float?

  dailyProjectActivityId   Int?
  dailyProjectActivity     ProjectActivity? @relation("daily_activity_report", fields: [dailyProjectActivityId], references: [id])
  monthlyProjectActivityId Int?
  monthlyProjectActivity   ProjectActivity? @relation("monthly_activity_report", fields: [monthlyProjectActivityId], references: [id])

  dailyProjectReportId   Int?
  dailyProjectReport     ProjectReport? @relation("daily_report", fields: [dailyProjectReportId], references: [id])
  monthlyProjectReportId Int?
  monthlyProjectReport   ProjectReport? @relation("monthly_report", fields: [monthlyProjectReportId], references: [id])

  @@index([monthlyProjectActivityId])
  @@index([dailyProjectActivityId])
  @@index([dailyProjectReportId])
  @@index([monthlyProjectReportId])
  @@map("ActivityReports")
}

model Cost {
  id       Int      @id @unique @default(autoincrement())
  created  DateTime @default(now())
  modified DateTime @default(now())
  deleted  Boolean  @default(false)

  invoiceNumber String
  amount        Float
  date          DateTime
  details       String

  supplierId Int
  supplier   Supplier @relation(fields: [supplierId], references: [id])

  @@index([supplierId])
  @@map("Costs")
}

model Receipt {
  id       Int      @id @unique @default(autoincrement())
  created  DateTime @default(now())
  modified DateTime @default(now())
  deleted  Boolean  @default(false)

  invoiceNumber String
  amount        Float
  date          DateTime
  type          String

  contractId Int
  contract   Contract @relation(fields: [contractId], references: [id])

  @@index([contractId])
  @@map("Receipts")
}
