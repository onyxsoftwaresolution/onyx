generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

enum Role {
  ADMIN
  USER

  @@map("Roles")
}

model User {
  id       Int      @id @unique @default(autoincrement())
  created  DateTime @default(now())
  modified DateTime @default(now())
  deleted  Boolean  @default(false)

  username String @unique
  password String
  role     Role

  @@map("Users")
}

model ActivityTemplate {
  id       Int      @id @unique @default(autoincrement())
  created  DateTime @default(now())
  modified DateTime @default(now())
  deleted  Boolean  @default(false)

  description String
  material    String
  cost        Float
  available   Boolean @default(true)

  @@map("ActivityTemplates")
}

model Employee {
  id       Int      @id @unique @default(autoincrement())
  created  DateTime @default(now())
  modified DateTime @default(now())
  deleted  Boolean  @default(false)

  name         String
  position     String
  available    Boolean   @default(true)
  adminProject Project[] @relation("admin")
  localProject Project[] @relation("local")

  @@map("Employees")
}

model Project {
  id       Int      @id @unique @default(autoincrement())
  created  DateTime @default(now())
  modified DateTime @default(now())
  deleted  Boolean  @default(false)

  code        String
  description String
  area        String
  start       DateTime
  end         DateTime
  available   Boolean  @default(true)

  areaAdminId  Int?
  areaAdmin    Employee? @relation("admin", fields: [areaAdminId], references: [id])
  localAdminId Int?
  localAdmin   Employee? @relation("local", fields: [localAdminId], references: [id])

  projectActivities ProjectActivity[]
  reports           ProjectReport[]

  @@index([areaAdminId])
  @@index([localAdminId])
  @@map("Projects")
}

model ProjectReport {
  id       Int      @id @unique @default(autoincrement())
  created  DateTime @default(now())
  modified DateTime @default(now())
  deleted  Boolean  @default(false)

  projectId Int?
  project   Project? @relation(fields: [projectId], references: [id])
  date      DateTime

  daily   ActivityReport[] @relation("daily_report")
  monthly ActivityReport[] @relation("monthly_report")
  site    ActivityReport[] @relation("site_report")

  @@index([projectId])
  @@map("ProjectRepots")
}

model ProjectActivity {
  id       Int      @id @unique @default(autoincrement())
  created  DateTime @default(now())
  modified DateTime @default(now())
  deleted  Boolean  @default(false)

  projectId Int
  project   Project @relation(fields: [projectId], references: [id])

  quantity    Float  @default(0)
  // from activity template
  description String
  material    String
  cost        Float

  daily   ActivityReport[] @relation("daily")
  monthly ActivityReport[] @relation("monthly")
  site    ActivityReport[] @relation("site")

  @@index([projectId])
  @@map("ProjectActivities")
}

model ActivityReport {
  id       Int      @id @unique @default(autoincrement())
  created  DateTime @default(now())
  modified DateTime @default(now())
  deleted  Boolean  @default(false)

  dailyId   Int?
  daily     ProjectActivity? @relation("daily", fields: [dailyId], references: [id])
  monthlyId Int
  monthly   ProjectActivity? @relation("monthly", fields: [monthlyId], references: [id])
  siteId    Int?
  site      ProjectActivity? @relation("site", fields: [siteId], references: [id])

  dailyReportId   Int?
  dailyReport     ProjectReport? @relation("daily_report", fields: [dailyReportId], references: [id])
  monthlyReportId Int?
  monthlyReport   ProjectReport? @relation("monthly_report", fields: [monthlyReportId], references: [id])
  siteReportId    Int?
  siteReport      ProjectReport? @relation("site_report", fields: [siteReportId], references: [id])

  @@index([monthlyId])
  @@index([dailyId])
  @@index([siteId])
  @@index([dailyReportId])
  @@index([monthlyReportId])
  @@index([siteReportId])
  @@map("SiteActivityReports")
}
